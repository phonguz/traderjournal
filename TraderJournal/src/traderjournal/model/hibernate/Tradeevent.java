package traderjournal.model.hibernate;
// Generated 2009/01/29 04:30:34 by Hibernate Tools 3.2.4.CR1


import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * Tradeevent generated by hbm2java
 */
public class Tradeevent  extends traderjournal.model.hibernate.HibernateBaseModel implements java.io.Serializable {


     private Integer id;
     private Tradeeventtype tradeeventtype;
     private Trade trade;
     private Date eventDate;
     private String description;
     private Integer eventorder;
     private Double newValue;
     private Set tradeeventimages = new HashSet(0);

    public Tradeevent() {
    }

	
    public Tradeevent(Tradeeventtype tradeeventtype, Trade trade) {
        this.tradeeventtype = tradeeventtype;
        this.trade = trade;
    }
    public Tradeevent(Tradeeventtype tradeeventtype, Trade trade, Date eventDate, String description, Integer eventorder, Double newValue, Set tradeeventimages) {
       this.tradeeventtype = tradeeventtype;
       this.trade = trade;
       this.eventDate = eventDate;
       this.description = description;
       this.eventorder = eventorder;
       this.newValue = newValue;
       this.tradeeventimages = tradeeventimages;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Tradeeventtype getTradeeventtype() {
        return this.tradeeventtype;
    }
    
    public void setTradeeventtype(Tradeeventtype tradeeventtype) {
        this.tradeeventtype = tradeeventtype;
    }
    public Trade getTrade() {
        return this.trade;
    }
    
    public void setTrade(Trade trade) {
        this.trade = trade;
    }
    public Date getEventDate() {
        return this.eventDate;
    }
    
    public void setEventDate(Date eventDate) {
        this.eventDate = eventDate;
    }
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    public Integer getEventorder() {
        return this.eventorder;
    }
    
    public void setEventorder(Integer eventorder) {
        this.eventorder = eventorder;
    }
    public Double getNewValue() {
        return this.newValue;
    }
    
    public void setNewValue(Double newValue) {
        this.newValue = newValue;
    }
    public Set getTradeeventimages() {
        return this.tradeeventimages;
    }
    
    public void setTradeeventimages(Set tradeeventimages) {
        this.tradeeventimages = tradeeventimages;
    }





public <X> X get(String property){
    if(property.equals("id")){

     return (X) getId(); 
    }
    if(property.equals("tradeeventtype")){

     return (X) getTradeeventtype(); 
    }
    if(property.equals("trade")){

     return (X) getTrade(); 
    }
    if(property.equals("eventDate")){

     return (X) getEventDate(); 
    }
    if(property.equals("description")){

     return (X) getDescription(); 
    }
    if(property.equals("eventorder")){

     return (X) getEventorder(); 
    }
    if(property.equals("newValue")){

     return (X) getNewValue(); 
    }
    if(property.equals("tradeeventimages")){

     return (X) getTradeeventimages(); 
    }
	return null;
}

public Map<String, Object> getProperties() {
		HashMap< String, Object> hm = new HashMap<String, Object>();
		
	    hm.put("id",getId() );
		
	    hm.put("tradeeventtype",getTradeeventtype() );
		
	    hm.put("trade",getTrade() );
		
	    hm.put("eventDate",getEventDate() );
		
	    hm.put("description",getDescription() );
		
	    hm.put("eventorder",getEventorder() );
		
	    hm.put("newValue",getNewValue() );
		
	    hm.put("tradeeventimages",getTradeeventimages() );
		return hm;
}

public Collection<String> getPropertyNames() {
		List<String> ret = new ArrayList<String>();
	    ret.add("id");
	    ret.add("tradeeventtype");
	    ret.add("trade");
	    ret.add("eventDate");
	    ret.add("description");
	    ret.add("eventorder");
	    ret.add("newValue");
	    ret.add("tradeeventimages");
		return ret;
	}


	public <X> X remove(String property) {
		// TODO Auto-generated method stub
		return null;
	}


	public <X> X set(String property, X value) {
		    if(property.equals("id")){
		     setId(( Integer)value) ; 
		    }
		    if(property.equals("tradeeventtype")){
		     setTradeeventtype(( Tradeeventtype)value) ; 
		    }
		    if(property.equals("trade")){
		     setTrade(( Trade)value) ; 
		    }
		    if(property.equals("eventDate")){
		     setEventDate(( Date)value) ; 
		    }
		    if(property.equals("description")){
		     setDescription(( String)value) ; 
		    }
		    if(property.equals("eventorder")){
		     setEventorder(( Integer)value) ; 
		    }
		    if(property.equals("newValue")){
		     setNewValue(( Double)value) ; 
		    }
		    if(property.equals("tradeeventimages")){
		     setTradeeventimages(( Set)value) ; 
		    }
		
		return null;
	}


}


