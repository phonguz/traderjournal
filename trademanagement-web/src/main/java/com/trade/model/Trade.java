package com.trade.model;

// Generated Jul 2, 2014 6:03:35 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Trade generated by hbm2java
 */
@Entity
@Table(name = "trade", catalog = "trademgmt")
public class Trade implements java.io.Serializable {

	private Integer id;
	private Trader trader;
	private Instrument instrument;
	private Accounts accounts;
	private Date opentradedate;
	private BigDecimal openprice;
	private Date closetradedate;
	private BigDecimal closeprice;
	private BigDecimal stoploss;
	private BigDecimal tp;
	private BigDecimal entrycoms;
	private BigDecimal exitcoms;
	private BigDecimal entryfees;
	private BigDecimal exitfees;
	private String reference;
	private BigDecimal carrycost;
	private Integer quantity;
	private Date lastupdtdate;
	private Integer updatedby;
	private int tradetype;
	private Set<Tradeevent> tradeevents = new HashSet<Tradeevent>(0);

	public Trade() {
	}

	public Trade(Trader trader, Instrument instrument, Accounts accounts,
			int tradetype) {
		this.trader = trader;
		this.instrument = instrument;
		this.accounts = accounts;
		this.tradetype = tradetype;
	}

	public Trade(Trader trader, Instrument instrument, Accounts accounts,
			Date opentradedate, BigDecimal openprice, Date closetradedate,
			BigDecimal closeprice, BigDecimal stoploss, BigDecimal tp,
			BigDecimal entrycoms, BigDecimal exitcoms, BigDecimal entryfees,
			BigDecimal exitfees, String reference, BigDecimal carrycost,
			Integer quantity, Date lastupdtdate, Integer updatedby,
			int tradetype, Set<Tradeevent> tradeevents) {
		this.trader = trader;
		this.instrument = instrument;
		this.accounts = accounts;
		this.opentradedate = opentradedate;
		this.openprice = openprice;
		this.closetradedate = closetradedate;
		this.closeprice = closeprice;
		this.stoploss = stoploss;
		this.tp = tp;
		this.entrycoms = entrycoms;
		this.exitcoms = exitcoms;
		this.entryfees = entryfees;
		this.exitfees = exitfees;
		this.reference = reference;
		this.carrycost = carrycost;
		this.quantity = quantity;
		this.lastupdtdate = lastupdtdate;
		this.updatedby = updatedby;
		this.tradetype = tradetype;
		this.tradeevents = tradeevents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "trader_id", nullable = false)
	public Trader getTrader() {
		return this.trader;
	}

	public void setTrader(Trader trader) {
		this.trader = trader;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "instrument_id", nullable = false)
	public Instrument getInstrument() {
		return this.instrument;
	}

	public void setInstrument(Instrument instrument) {
		this.instrument = instrument;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "accounts_id", nullable = false)
	public Accounts getAccounts() {
		return this.accounts;
	}

	public void setAccounts(Accounts accounts) {
		this.accounts = accounts;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "opentradedate", length = 19)
	public Date getOpentradedate() {
		return this.opentradedate;
	}

	public void setOpentradedate(Date opentradedate) {
		this.opentradedate = opentradedate;
	}

	@Column(name = "openprice", precision = 7)
	public BigDecimal getOpenprice() {
		return this.openprice;
	}

	public void setOpenprice(BigDecimal openprice) {
		this.openprice = openprice;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "closetradedate", length = 19)
	public Date getClosetradedate() {
		return this.closetradedate;
	}

	public void setClosetradedate(Date closetradedate) {
		this.closetradedate = closetradedate;
	}

	@Column(name = "closeprice", precision = 7)
	public BigDecimal getCloseprice() {
		return this.closeprice;
	}

	public void setCloseprice(BigDecimal closeprice) {
		this.closeprice = closeprice;
	}

	@Column(name = "stoploss", precision = 7)
	public BigDecimal getStoploss() {
		return this.stoploss;
	}

	public void setStoploss(BigDecimal stoploss) {
		this.stoploss = stoploss;
	}

	@Column(name = "tp", precision = 7)
	public BigDecimal getTp() {
		return this.tp;
	}

	public void setTp(BigDecimal tp) {
		this.tp = tp;
	}

	@Column(name = "entrycoms", precision = 7)
	public BigDecimal getEntrycoms() {
		return this.entrycoms;
	}

	public void setEntrycoms(BigDecimal entrycoms) {
		this.entrycoms = entrycoms;
	}

	@Column(name = "exitcoms", precision = 7)
	public BigDecimal getExitcoms() {
		return this.exitcoms;
	}

	public void setExitcoms(BigDecimal exitcoms) {
		this.exitcoms = exitcoms;
	}

	@Column(name = "entryfees", precision = 7)
	public BigDecimal getEntryfees() {
		return this.entryfees;
	}

	public void setEntryfees(BigDecimal entryfees) {
		this.entryfees = entryfees;
	}

	@Column(name = "exitfees", precision = 7)
	public BigDecimal getExitfees() {
		return this.exitfees;
	}

	public void setExitfees(BigDecimal exitfees) {
		this.exitfees = exitfees;
	}

	@Column(name = "reference")
	public String getReference() {
		return this.reference;
	}

	public void setReference(String reference) {
		this.reference = reference;
	}

	@Column(name = "carrycost", precision = 7)
	public BigDecimal getCarrycost() {
		return this.carrycost;
	}

	public void setCarrycost(BigDecimal carrycost) {
		this.carrycost = carrycost;
	}

	@Column(name = "quantity")
	public Integer getQuantity() {
		return this.quantity;
	}

	public void setQuantity(Integer quantity) {
		this.quantity = quantity;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastupdtdate", length = 19)
	public Date getLastupdtdate() {
		return this.lastupdtdate;
	}

	public void setLastupdtdate(Date lastupdtdate) {
		this.lastupdtdate = lastupdtdate;
	}

	@Column(name = "updatedby")
	public Integer getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}

	@Column(name = "tradetype", nullable = false)
	public int getTradetype() {
		return this.tradetype;
	}

	public void setTradetype(int tradetype) {
		this.tradetype = tradetype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "trade")
	public Set<Tradeevent> getTradeevents() {
		return this.tradeevents;
	}

	public void setTradeevents(Set<Tradeevent> tradeevents) {
		this.tradeevents = tradeevents;
	}

}
